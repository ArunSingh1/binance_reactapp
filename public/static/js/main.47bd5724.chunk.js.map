{"version":3,"sources":["components/Cryptoitem.js","components/Crypto.js","App.js","reportWebVitals.js","index.js"],"names":["Cryptoitem","crypto","symbol","volume","weightedAvgPrice","lastQty","className","CRYPTO_QUERY","gql","Crypto","query","loading","error","data","console","log","cryptos","map","Component","client","ApolloClient","uri","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAEe,SAASA,EAAT,GAA8E,IAAD,IAAxDC,OAAUC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,iBAAkBC,EAAY,EAAZA,QAE5E,OAAO,qBAAKC,UAAW,sBAAhB,SACH,qBAAKA,UAAW,MAAhB,SACI,sBAAKA,UAAU,WAAf,UACI,kDAAqBJ,KACrB,yDAA4BE,KAC5B,yCAAYD,KACZ,gDAAmBE,YCHnC,IAAME,EAAeC,YAAH,qMAWLC,EAAb,4JACI,WACI,OACI,qCACE,6CACA,cAAC,IAAD,CAAOC,MAAOH,EAAd,SAEM,YAA6B,IAA3BI,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,KACd,OAAGF,EAAgB,gDAChBC,GAAOE,QAAQC,IAAIH,GAIf,yCACHC,EAAKG,QAAQC,KAAI,SAAAhB,GAAM,OACnB,cAACD,EAAD,CAAiCC,OAAQA,GAAvBA,EAAOC,yBAfzD,GAA4BgB,aA+BbT,IC7CTU,EAAS,IAAIC,IAAa,CAC9BC,IAAK,aAkBQC,MAdf,WACE,OACE,cAAC,IAAD,CAAgBH,OAAUA,EAA1B,SACE,sBAAKb,UAAU,YAAf,UACE,2CACA,mLACA,6NACA,mFACA,cAAC,EAAD,UCLOiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.47bd5724.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Cryptoitem({crypto : {symbol, volume, weightedAvgPrice, lastQty }}) {\n\n    return <div className= \"card card=body mb-3\">\n        <div className= \"row\">\n            <div className=\"col-md-9\">\n                <h6>CryptoCurrency: {symbol}</h6>\n                <p>Weighted Average Price: {weightedAvgPrice}</p>\n                <p>Volume: {volume}</p>\n                <p>Last Quantity: {lastQty}</p>\n            </div>\n        </div>          \n        </div>\n    \n}\n","import React, { Component } from 'react'\nimport gql from 'graphql-tag';\nimport { Query } from '@apollo/react-components';\n// import { query } from 'express';\nimport Cryptoitem from './Cryptoitem'\n\n\nconst CRYPTO_QUERY = gql`\n    query CryptoQuery {\n        cryptos {\n            symbol\n            volume\n            weightedAvgPrice            \n            lastQty\n            }\n    }\n`;\n\nexport class Crypto extends Component {\n    render() {\n        return (\n            <>\n              <h5>Crypto Data</h5> \n              <Query query={CRYPTO_QUERY}>\n                  {\n                    ({loading, error, data}) => {\n                        if(loading) return <h4>loading......</h4>\n                        if(error) console.log(error);\n                        \n                        \n\n                        return <> {\n                            data.cryptos.map(crypto => (\n                                <Cryptoitem key ={crypto.symbol} crypto={crypto} />\n                            )\n                            )\n                        }\n                        </>\n                    }\n                }\n                </Query>\n\n\n            \n            </>\n        )\n    }\n}\n\nexport default Crypto;\n","import ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport Crypto from './components/Crypto';\n\nconst client = new ApolloClient({\n  uri: \"/graphql\" \n});\n\n\nfunction App() {\n  return (\n    <ApolloProvider client = {client}>\n      <div className=\"container\">\n        <h2> Binance </h2>\n        <h5> Binance is a cryptocurrency exchange which is currently the largest exchange in the world in terms of daily trading volume of cryptocurrencies. </h5>\n        <p> Around 1705 cryptocurrencies 24 hour rolling window price change statistics is displayed here. Data is collected using Binance's OpenAPI https://github.com/binance/binance-spot-api-docs/ </p>\n        <p> React | ApolloClient | GraphQL | Express-GraphQL </p>\n        <Crypto/>\n      </div>\n    </ApolloProvider> \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}